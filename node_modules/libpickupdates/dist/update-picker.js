"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UpdatePicker;

var _react = _interopRequireDefault(require("react"));

var _ink = require("ink");

var _select = require("./select");

var _semver = _interopRequireDefault(require("semver"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function UpdatePicker({
  outdated = [],
  stdin,
  onSubmit,
  unicode
}) {
  const major = outdated.filter(out => out.current !== 'MISSING' && _semver.default.diff(out.current, out.wanted) === 'major');
  const minor = outdated.filter(out => out.current !== 'MISSING' && _semver.default.diff(out.current, out.wanted) === 'minor');
  const patch = outdated.filter(out => out.current !== 'MISSING' && _semver.default.diff(out.current, out.wanted) === 'patch');
  const preDiffs = new Set(['premajor', 'preminor', 'prepatch', 'prerelease']);
  const pre = outdated.filter(out => out.current !== 'MISSING' && preDiffs.has(_semver.default.diff(out.current, out.wanted)));
  const missing = outdated.filter(out => out.current === 'MISSING');
  return _react.default.createElement("div", null, _react.default.createElement(_ink.Text, {
    bold: true
  }, _react.default.createElement(_ink.Color, {
    green: true
  }, "?"), " Select packages to update."), _react.default.createElement(_select.Select, {
    stdin: stdin,
    onSubmit: onSubmit,
    unicode: unicode
  }, major.length && _react.default.createElement(_select.OptGroup, {
    label: _react.default.createElement(_ink.Color, {
      red: true
    }, '\nAPI-breaking updates')
  }, major.map(out => {
    return _react.default.createElement(_select.Option, {
      key: out.name,
      value: out.name
    }, _react.default.createElement(Outdated, {
      item: out
    }));
  })), minor.length && _react.default.createElement(_select.OptGroup, {
    label: _react.default.createElement(_ink.Color, {
      blue: true
    }, '\nNew feature updates')
  }, minor.map(out => {
    return _react.default.createElement(_select.Option, {
      key: out.name,
      value: out.name
    }, _react.default.createElement(Outdated, {
      item: out
    }));
  })), patch.length && _react.default.createElement(_select.OptGroup, {
    label: '\nBugfix updates'
  }, patch.map(out => {
    return _react.default.createElement(_select.Option, {
      key: out.name,
      value: out.name
    }, _react.default.createElement(Outdated, {
      item: out
    }));
  })), pre.length && _react.default.createElement(_select.OptGroup, {
    label: '\nPrerelease updates'
  }, pre.map(out => {
    return _react.default.createElement(_select.Option, {
      key: out.name,
      value: out.name
    }, _react.default.createElement(Outdated, {
      item: out
    }));
  })), missing.length && _react.default.createElement(_select.OptGroup, {
    label: _react.default.createElement(_ink.Color, {
      yellow: true
    }, '\nNeeds install')
  }, missing.map(out => {
    return _react.default.createElement(_select.Option, {
      key: out.name,
      value: out.name
    }, _react.default.createElement(Outdated, {
      item: out
    }));
  }))));
}

function Outdated({
  item
}) {
  return _react.default.createElement(_ink.Color, {
    green: true
  }, item.name);
}